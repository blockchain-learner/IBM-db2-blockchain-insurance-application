Organizations:
  # SampleOrg defines an MSP using the sampleconfig.  It should never be used
  # in production but may be used as a template for other definitions
  - &OrdererOrg
    # DefaultOrg defines the organization which is used in the sampleconfig
    # of the fabric.git development environment
    Name: OrdererOrg
    # ID to load the MSP definition as
    ID: OrdererMSP
    # MSPDir is the filesystem path which contains the MSP configuration
    MSPDir: cli/peers/ordererOrganizations/orderer-org/msp

    # Policies defines the set of policies at this level of the config tree
    # For organization policies, their canonical path is usually
    #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('OrdererMSP.admin')"
#    OrdererEndpoints:
#      - 127.0.0.1:6050
#      - 127.0.0.1:6051
#      - 127.0.0.1:6052
  - &InsuranceOrg
    # DefaultOrg defines the organization which is used in the sampleconfig
    # of the fabric.git development environment
    Name: InsuranceOrgMSP
    # ID to load the MSP definition as
    ID: InsuranceOrgMSP
    MSPDir: cli/peers/peerOrganizations/insurance-org/msp

    # Policies defines the set of policies at this level of the config tree
    # For organization policies, their canonical path is usually
    #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('InsuranceOrgMSP.admin', 'InsuranceOrgMSP.peer', 'InsuranceOrgMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('InsuranceOrgMSP.admin', 'InsuranceOrgMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('InsuranceOrgMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('InsuranceOrgMSP.peer')"
    # leave this flag set to true.
    AnchorPeers:
      # AnchorPeers defines the location of peers which can be used
      # for cross org gossip communication.  Note, this value is only
      # encoded in the genesis block in the Application section context
      - Host: insurance-peer
        Port: 7051
  - &ShopOrg
    Name: ShopOrgMSP
    ID: ShopOrgMSP
    MSPDir: cli/peers/peerOrganizations/shop-org/msp
    # Policies defines the set of policies at this level of the config tree
    # For organization policies, their canonical path is usually
    #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('ShopOrgMSP.admin', 'ShopOrgMSP.peer', 'ShopOrgMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('ShopOrgMSP.admin', 'ShopOrgMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('ShopOrgMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('ShopOrgMSP.peer')"
    AnchorPeers:
      - Host: shop-peer
        Port: 7051

  - &RepairShopOrg
    Name: RepairShopOrgMSP
    ID: RepairShopOrgMSP
    MSPDir: cli/peers/peerOrganizations/repairshop-org/msp
    # Policies defines the set of policies at this level of the config tree
    # For organization policies, their canonical path is usually
    #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin', 'RepairShopOrgMSP.peer', 'RepairShopOrgMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin', 'RepairShopOrgMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.peer')"
    AnchorPeers:
      - Host: repairshop-peer
        Port: 7051

  - &PoliceOrg
    Name: PoliceOrgMSP
    ID: PoliceOrgMSP
    MSPDir: cli/peers/peerOrganizations/police-org/msp
    # Policies defines the set of policies at this level of the config tree
    # For organization policies, their canonical path is usually
    #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin', 'RepairShopOrgMSP.peer', 'RepairShopOrgMSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin', 'RepairShopOrgMSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('RepairShopOrgMSP.peer')"
    AnchorPeers:
      - Host: police-peer
        Port: 7051
################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
  # Channel capabilities apply to both the orderers and the peers and must be
  # supported by both.
  # Set the value of the capability to true to require it.
  Channel: &ChannelCapabilities
    # V2_0 capability ensures that orderers and peers behave according
    # to v2.0 channel capabilities. Orderers and peers from
    # prior releases would behave in an incompatible way, and are therefore
    # not able to participate in channels at v2.0 capability.
    # Prior to enabling V2.0 channel capabilities, ensure that all
    # orderers and peers on a channel are at v2.0.0 or later.
    V2_0: true

  # Orderer capabilities apply only to the orderers, and may be safely
  # used with prior release peers.
  # Set the value of the capability to true to require it.
  Orderer: &OrdererCapabilities
    # V2_0 orderer capability ensures that orderers behave according
    # to v2.0 orderer capabilities. Orderers from
    # prior releases would behave in an incompatible way, and are therefore
    # not able to participate in channels at v2.0 orderer capability.
    # Prior to enabling V2.0 orderer capabilities, ensure that all
    # orderers on channel are at v2.0.0 or later.
    V2_0: true

  # Application capabilities apply only to the peer network, and may be safely
  # used with prior release orderers.
  # Set the value of the capability to true to require it.
  Application: &ApplicationCapabilities
    # V2.5 for Application enables the new non-backwards compatible
    # features of fabric v2.5, namely the ability to purge private data.
    # Prior to enabling V2.5 application capabilities, ensure that all
    # peers on a channel are at v2.5.0 or later.
    V2_5: true


Application: &ApplicationDefaults
  Organizations:

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults
  OrdererType: solo
  Addresses:
    - orderer0:7050
  BatchTimeout: 2s
  BatchSize:
    MaxMessageCount: 10
    AbsoluteMaxBytes: 99 MB
    PreferredMaxBytes: 512 KB
  Organizations:
  # Policies defines the set of policies at this level of the config tree
  # For Orderer policies, their canonical path is
  #   /Channel/Orderer/<PolicyName>
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
  # Policies defines the set of policies at this level of the config tree
  # For Channel policies, their canonical path is
  #   /Channel/<PolicyName>
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"

  # Capabilities describes the channel level capabilities, see the
  # dedicated Capabilities section elsewhere in this file for a full
  # description
  Capabilities:
    <<: *ChannelCapabilities

Profiles:
  FourOrgsGenesis:
    <<: *ChannelDefaults
    Orderer:
      <<: *OrdererDefaults
      Organizations:
      - *InsuranceOrg
      - *ShopOrg
      - *RepairShopOrg
      - *PoliceOrg
    Consortiums:
      InsuranceConsortium:
        Organizations:
        - *InsuranceOrg
        - *ShopOrg
        - *RepairShopOrg
        - *PoliceOrg
  FourOrgsChannel:
    Consortium: InsuranceConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *InsuranceOrg
        - *ShopOrg
        - *RepairShopOrg
        - *PoliceOrg